head(rankall("heart attack", 20), 10)
source("rankall.R")
head(rankall("heart attack", 20), 10)
source("rankall.R")
rankall("heart attack", 20), 10
rankall("heart attack", 20)
source("rankallf.R")
head(rankallf("heart attack", 20), 10)
source("rankall.R")
head(rankallf("heart attack", 20), 10)
head(rankall("heart attack", 20), 10)
source("rankall.R")
head(rankall("heart attack", 20), 10)
dataset <- read.csv("outcome-of-care-measures.csv",colClasses="character")
dataset1 <- order(dataset$State)
dataset1
source("rankall.R")
head(rankall("heart attack", 20), 10)
source("rankall.R")
head(rankall("heart attack", 20), 10)
dataset <- read.csv("outcome-of-care-measures.csv",colClasses="character")
dataset1 <- order(dataset$State)
datset3 = dataset[dataset1,]
dataset3
dataset3$State
datset3$State
source("rankall.R")
head(rankall("heart attack", 20), 10)
head(datset3$State,10)
head(datset3$State)
source("rankall.R")
head(rankall("heart attack", 20), 10)
source("rankall.R")
head(rankall("heart attack", 20), 10)
source("rankall.R")
head(rankall("heart attack", 20), 10)
source("rankall.R")
head(rankall("heart attack", 20), 10)
source("rankall.R")
rankall("heart attack", 20)
out2
source("rankall.R")
rankall("heart attack", 20)
head(rankall("heart attack", 20), 10)
source("rankall.R")
head(rankall("heart attack", 20), 10)
source("rankall.R")
head(rankall("heart attack", 20), 10)
source("rankall.R")
head(rankall("heart attack", 20), 10)
source("rankall.R")
head(rankall("heart attack", 20), 10)
head(rankall("heart failure", 20), 10)
source("rankall.R")
source("rankall.R")
head(rankall("heart failure", 20), 10)
head(rankall("heart attack", "Best), 10)
head(rankall("heart attack", "Best"), 10)
head(rankall("heart attack", "Best"), 10)
head(rankall("heart attack", "best"), 10)
warnings()
head(rankall("heart attack", "worst"), 10)
source("rankall.R")
head(rankall("heart attack", "worst"), 10)
source("rankall.R")
submit()
source("rankall.R")
head(rankall("heart attack", "worst"), 10)
head(rankall("heart attack", "worst"), 10)
source("rankall.R")
source("rankall.R")
head(rankall("heart attack", "worst"), 10)
submit()
source("rankall.R")
head(rankall("heart attack", "worst"), 10)
source("rankall.R")
head(rankall("heart attack", "worst"), 10)
source("rankall.R")
head(rankall("heart attack", "best"), 10)
source("rankall.R")
head(rankall("heart attack", "best"), 10)
head(rankall("heart attack", "worst"), 10)
dataset3 <- c("AK","AL","AR","AZ", "CA" ,"CO" , "CT" , "DC","DE","FL","GA","GU","HI","IA","ID","IL","IN","KS","KY","LA","MA","MD","ME","MI","MN","MO","MS","MT","NC","ND","NE","NH","NJ","NM","NV","NY","OH","OK","OR","PA","PR","RI","SC","SD","TN","TX","UT","VA","VI","VT","WA","WI","WV","WY")
dh1 <- dataset[,c(2,7,11)]
names(dh1)[2] <- "state"
names(dh1)[1] <- "hospital"
names(dh1)[3] <- "HAT"
suppressWarnings(dh2 <- order(as.numeric(dh1$HAT),dh1$hospital))
dh3 = dh1[dh2,]
dh4 <- subset(dh3, dh3$HFL!="Not Available" )
dhstate <- subset(dh4,dh4[,2]=="CA")
out <- dhstate[1,1:2]
out1 <- rbind(out1,out)
out1
dh4
dataset3 <- c("AK","AL","AR","AZ", "CA" ,"CO" , "CT" , "DC","DE","FL","GA","GU","HI","IA","ID","IL","IN","KS","KY","LA","MA","MD","ME","MI","MN","MO","MS","MT","NC","ND","NE","NH","NJ","NM","NV","NY","OH","OK","OR","PA","PR","RI","SC","SD","TN","TX","UT","VA","VI","VT","WA","WI","WV","WY")
dh1 <- dataset[,c(2,7,11)]
names(dh1)[2] <- "state"
names(dh1)[1] <- "hospital"
names(dh1)[3] <- "HAT"
suppressWarnings(dh2 <- order(as.numeric(dh1$HAT),dh1$hospital))
dh3 = dh1[dh2,]
dh4 <- subset(dh3, dh3$HATL!="Not Available" )
dhstate <- subset(dh4,dh4[,2]=="CA")
out <- dhstate[1,1:2]
out1 <- rbind(out1,out)
OUT1
out1
dh4
dh1
dh3
head(dh3,30)
dh4 <- subset(dh3, dh3$HAT!="Not Available" )
dh4
source("rankall.R")
head(rankall("heart attack", "worst"), 10)
submit()
submit()
source("rankall.R")
submit()
submit()
head(rankall("heart attack", 20), 10)
source("rankall.R")
head(rankall("heart attack", 20), 10)
source("rankall.R")
head(rankall("heart attack", 20), 10)
source("rankall.R")
head(rankall("heart attack", 20), 10)
source("rankall.R")
head(rankall("heart attack", 20), 10)
source("thermalcomfort.R")
source("thermalcomfort.R")
getwd()
setwd("D:/Users/Kanu/Desktop/ilab/ilabtcdata")
source("thermalcomfort.R")
source("thermalcomfort.R")
source("thermalcomfort.R")
source("thermalcomfort.R")
source("thermalcomfort.R")
source("thermalcomfort.R")
source("thermalcomfort.R")
source("thermalcomfort.R")
source("thermalcomfort.R")
source("thermalcomfort.R")
source("thermalcomfort.R")
source("thermalcomfort.R")
source("thermalcomfort.R")
source("thermalcomfort.R")
source("thermalcomfort.R")
source("thermalcomfort.R")
TH
TH[1:5,]
source("thermalcomfort.R")
source("thermalcomfort.R")
source("thermalcomfort.R")
source("thermalcomfort.R")
TH[1:5,]
CB[1:5,]
NO[1:5,]
FF[1:5,]
TH[1:5,]
TH <- read.delim("RT.txt", header = FALSE, sep = " " , strip.white=TRUE, col.names=c("Date", "Time","RelHum" ,"Temp"))
TH[1:5,]
TH <- read.delim("RT.txt", header = FALSE, sep = "/t " , strip.white=TRUE, col.names=c("Date", "Time","RelHum" ,"Temp"))
TH <- read.delim("RT.txt", header = FALSE, sep = "/t" , strip.white=TRUE, col.names=c("Date", "Time","RelHum" ,"Temp"))
TH <- read.delim("RT.txt", header = FALSE, sep = /t , strip.white=TRUE, col.names=c("Date", "Time","RelHum" ,"Temp"))
TH <- read.delim("RT.txt", header = FALSE, sep = \t , strip.white=TRUE, col.names=c("Date", "Time","RelHum" ,"Temp"))
TH <- read.delim("RT.txt", header = FALSE, sep = "\t" , strip.white=TRUE, col.names=c("Date", "Time","RelHum" ,"Temp"))
TH[1:5,]
TH <- read.delim("RT.txt", header = FALSE, sep = " " , strip.white=TRUE, col.names=c("Date", "Time","RelHum" ,"Temp"))
TH1 <- data.frame(TH, sep = " ")
TH1[1:5,]
TH <- read.delim("RT.txt", header = FALSE, sep = "\t" , strip.white=TRUE, col.names=c("Date", "Time","RelHum" ,"Temp"))
TH[1:5,]
TH <- read.delim("RT.txt", header = FALSE, sep = " " , strip.white=TRUE, col.names=c("Date", "Time","RelHum" ,"Temp"))
TH1 <- data.frame(TH, na.rm=TRUE,sep = " ")
TH1[1:5,]
TH <- read.delim("RT.txt", header = FALSE, sep = " " , strip.white=TRUE, col.names=c("Date", "Time","RelHum" ,"Temp"))
TH1 <- is.na(data.frame(TH,sep = " "))
TH1[1:5,]
TH <- read.delim("RT.txt", header = FALSE, sep = " " , strip.white=TRUE, col.names=c("Date", "Time","RelHum" ,"Temp"))
TH1 <- is.na(data.frame(TH))
TH1[1:5,]
TH <- read.delim("RT.txt", header = FALSE, sep = " " , strip.white=TRUE, col.names=c("Date", "Time","RelHum" ,"Temp"))
TH1 <- TH[!is.na(TH)]
TH1[1:5,]
TH1
TH <- na.omit(read.delim("RT.txt", header = FALSE, sep = " " , strip.white=TRUE, col.names=c("Date", "Time","RelHum" ,"Temp")))
TH[1:5,]
TH <- read.delim("RT.txt", header = FALSE, sep = " " , strip.white=TRUE, col.names=c("Date", "Time","RelHum" ,"Temp"))
TH1 <- na.omit(TH)
TH1[1:5,]
TH <- read.delim("RT.txt", header = FALSE, sep = " " , strip.white=TRUE, col.names=c("Date", "Time","RelHum" ,"Temp"))
TH[1:5,]
TH <- read.csv("RT.txt", header = FALSE, sep = " " , strip.white=TRUE, col.names=c("Date", "Time","RelHum" ,"Temp"))
TH[1:5,]
TH <- read.csv("RT.txt", header = TRUE, sep = " " , )
TH <- read.csv("RT.txt", header = TRUE, sep = " ")
TH <- read.csv("RT.txt", sep = " ")
TH <- read.csv("RT.txt", sep = " ")
TH <- read.delim("RT.txt", header = FALSE, sep = " " , strip.white=TRUE, col.names=c("Date", "Time","RelHum" ,"Temp"))
TH1 <- TH[complete.cases(TH),]
TH[1:5,]
TH1[1:5,]
TH[1:5,]
TH <- read.delim("RT.txt", header = FALSE, sep = "/t" , strip.white=TRUE, col.names=c("Date", "Time","RelHum" ,"Temp"))
TH <- read.delim("RT.txt", header = FALSE, sep ="/t" , strip.white=TRUE, col.names=c("Date", "Time","RelHum" ,"Temp"))
TH <- read.delim("RT.txt", header = FALSE, sep ="" , strip.white=TRUE, col.names=c("Date", "Time","RelHum" ,"Temp"))
TH[1:5,]
source("thermalcomfort.R")
source("thermalcomfort.R")
source("thermalcomfort.R")
warning()
FF
TH[1:5,]
FF[1:5,]
NO[1:5,]
FF[1:5,]
source("thermalcomfort.R")
warnings()
source("thermalcomfort.R")
CB1
CB
source("thermalcomfort.R")
source("thermalcomfort.R")
source("thermalcomfort.R")
warnings()
CB
source("thermalcomfort.R")
source("thermalcomfort.R")
str(CB)
CB
CB[1:100,]
CB[100:300,]
CB[300:700,]
source("thermalcomfort.R")
warnings()
source("thermalcomfort.R")
warnings()
source("thermalcomfort.R")
warnings()
source("thermalcomfort.R")
source("thermalcomfort.R")
CB
NO
source("thermalcomfort.R")
CB
source("thermalcomfort.R")
source("thermalcomfort.R")
summary(CB)
summary(FF)
source("thermalcomfort.R")
source("thermalcomfort.R")
source("thermalcomfort.R")
source("thermalcomfort.R")
source("thermalcomfort.R")
source("thermalcomfort.R")
source("thermalcomfort.R")
source("thermalcomfort.R")
source("thermalcomfort.R")
?jpg
source("thermalcomfort.R")
source("thermalcomfort.R")
source("thermalcomfort.R")
source("thermalcomfort.R")
source("thermalcomfort.R")
source("thermalcomfort.R")
source("thermalcomfort.R")
source("thermalcomfort.R")
source("thermalcomfort.R")
source("thermalcomfort.R")
CB
CLEAR
clear
cls
source("thermalcomfort.R")
ggplot(CB, aes(x=CB$Time, y=CB$Temp)) +   geom_point(shape=1) + geom_smooth(method=lm)
source("thermalcomfort.R")
boxplot(CB)
boxplot(CB$Time~CB$Temp)
?boxplot
geom_boxplot()
TH
geom_boxplot()
TH[1:5,]
TH[1:15,]
TH[1:10,]
TH[1:100,]
source("thermalcomfort.R")
source("thermalcomfort.R")
source("thermalcomfort.R")
TH[1:100,]
source("thermalcomfort.R")
CB
TH[1:100,]
TH[1:10,]
CB1 <- read.delim("CB.txt", header = FALSE, sep = " " , strip.white=TRUE, col.names=c("Date", "Time", "Temp"))
FF1 <- read.delim("FF.txt", header = FALSE, sep = " " , strip.white=TRUE, col.names=c("Date", "Time", "Temp"))
source('D:/Users/Kanu/Desktop/ilab/ilabtcdata/thermalcomfort.R')
seq1 <- seq(1:6)
seq1
seq1 <- seq(1:8)
seq1
mat1 <- mat(seq1,2)
mat1 <- matrix(seq1,2)
mat1
mat1 <- matrix(seq1,3)
seq1 <- seq(1:9)
mat1 <- matrix(seq1,3)
mat1
mat1 <- matrix(seq1,3, byrow=T)
mat1
mat1 <- matrix(seq1,ncol=3)
mat1
mat1 <- matrix(seq1,ncol=9)
mat1
mat1 <- matrix(seq1,ncol=6)
mat1 <- matrix(seq1,ncol=1)
mat1
mat1 <- matrix(rnorm(20),4)
mat1
dim(mat1)
v1 <- c(1,1,2,2)
V1
v1
mat6 <- cbind(mat1,v1)
mat6
mat6[,3]
b <- rep(1,5)
b
b <- c(rep(1,5),rep(3,4))
b
b <- c(rep(1,5),rep(3,4))
b
b <- matrix(c(rep(1,5),rep(3,4)))
b
b <- matrix(c(rep(1,5),rep(3,4)), 2)
b <- matrix(c(rep(1,5),rep(3,4)), 2)
b <- matrix(c(rep(1,5),rep(3,5)), 2)
b
b <- matrix(c(rep(1,3),rep(2,3)), 2)
b
b <- matrix(c(rep(1,3),rep(2,3)), 2, byrow=T)
b
a <- matrix(1:9 , 2)
a <- matrix(1:9 , 3)
a
b <- matrix(3:11 , 3)
b
a*b
a %*% b
a <- matrix(rep(1,9) , 3)
a
b <- matrix(rep(1,9) , 3)
b
a*b
a %*% b
install.packages("RWeka")
install.packages("MASS")
install.packages("stats")
install.packages("stats")
install.packages("caret")
install.packages("gbm")
install.packages("mda")
install.packages("rpart")
install.packages("LogitBoost")
install.packages("caTools")
install.packages("kernlab")
str(createDataPartition)
summary(createDataPartition)
str(createDataPartition)
library(caret)
str(createDataPartition)
str(set.seed())
str(set.seed
)
str(train)
summar(train)
summary(train)
str(train)
?train
args(train)
getwd(0)
getwd()
setwd("D:/Users/Kanu/Desktop/Analytics")
setwd("D:/Users/Kanu/Desktop/Analytics/machine learning")
data <- read.csv("pml-training")
data <- read.csv("pml-training.csv")
data <- read.csv("pml-training.csv")
ls
dir
getwd()
setwd("D:/Users/Kanu/Desktop/Analytics/Data Science Track/machine learning")
data <- read.csv("pml-training.csv")
str(data)
args(train.default())
args(train.default())
rfNews()
args(train.default
)
data(iris)
library(ggplot)
library(ggplot2)
names(iris)
table(iris$Species)
inTrain <- CreateDataPartition(y=iris$Species,p=0.7,list=FALSE)
library(caret)
inTrain <- CreateDataPartition(y=iris$Species,p=0.7,list=FALSE)
inTrain <- createDataPartition(y=iris$Species,p=0.7,list=FALSE)
inTrain
iris$Species
training <- [inTrain,]
training <- iris[inTrain,]
testing <-iris[-inTrain,]
dim(trainin)
dim(training)
dim(testing)
qplot(Petal.Width,Sepal.Width,colour=Species,data=Training)
qplot(Petal.Width,Sepal.Width,colour=Species,data=training)
modFit <- train(Species~.,method="rpart",data=training)
instal.packages(rpart)
install.packages(rpart)
install.packages("rpart")
install.packages("rpart")
modFit <- train(Species~.,method="rpart",data=training)
install.packages(e1071)
install.packages("e1071")
modFit <- train(Species~.,method="rpart",data=training)
print(modFit$finalModel)
modFit
plot(modFit$finalModel,uniform=TRUE,main="Classification Tree") text(modFit$finalModel,use.n=TRUE,all=TRUE,cex=0.8)
plot(modFit$finalModel,uniform=TRUE,main="Classification Tree") ; text(modFit$finalModel,use.n=TRUE,all=TRUE,cex=0.8)
install.packages(rattle)
install.packages("rattle")
library(rattle)
fancyRpartPlot(modFit$finalModel)
install.packages("rpart.plot")
fancyRpartPlot(modFit$finalModel)
predict(modFit,newdata=testing)
install.packages("tree")
install.packages("party")
library(ElemStatLearn)
install.packages("ElemStatLearn")
library(ElemStatLearn)
data(ozone,package="ElemStatLearn")
ozone
head(ozone)
ozone <- ozone[order(ozone$ozone),]]
ozone <- ozone[order(ozone$ozone),]
head(ozone)
ll <- matrix(NA,nrow=10,ncol=155)
ll
install.packages("gbm")
install.packages("quantmod")
install.packages("quandl")
install.packages("Quandl")
library(quantmod)
from.dat <- as.Date("01/01/14", format="%m/%d/%y")
to.dat <- as.Date("09/10/14",format="%m/%d/%y")
getSymbols("GOOG",src="google",from=from.dat, to =to.dat)
head(GOOG)
from.dat <- as.Date("01/01/13", format="%m/%d/%y")
to.dat <- as.Date("09/10/13",format="%m/%d/%y")
getSymbols("GOOG",src="google",from=from.dat, to =to.dat)
head(GOOG)
from.dat <- as.Date("01/01/08", format="%m/%d/%y")
to.dat <- as.Date("12/31/13",format="%m/%d/%y")
getSymbols("GOOG",src="google",from=from.dat, to =to.dat)
head(GOOG)
mgoog <- to.monthly(GOOG)
mGoog <- to.monthly(GOOG)
googOpen <- Op(mGoog)
install.packages("XLConnect ")
install.packages("XLConnect")
install.packages("sqldf")
install.packages("forecast")
install.packages("plyr")
install.packages("stringr")
install.packages("RPostgreSQL")
install.packages("RMySQL")
install.packages("RMongo")
install.packages("RODBC")
install.packages("RSQLite")
install.packages("lubridate")
install.packages("qcc")
install.packages("reshape2")
install.packages("xlsx ")
install.packages("xlsx")
install.packages("akima")
install.packages("kernlab")
install.packages("foreachb")
install.packages("foreach")
install.packages("scatterplot3d")
install.packages("RJSONIO ")
install.packages("RJSONIO")
install.packages("maps")
install.packages("igraphs")
install.packages("igraph")
install.packages("tseries")
install.packages("xtable")
install.packages("sp")
install.packages("rgl")
?set.seed
set.seed(10)
rnorm(10)
rnorm(10)
set.seed(10)
rnorm(10)
set.seed(31212)
rnorm(10)
set.seed(31212)
rnorm(10)
